[["index.html", "CM 1015 Computational Mathematics", " CM 1015 Computational Mathematics Chiuchiyin 2025-09-10 "],["00-preface.html", "Preface", " Preface This material is based on the October 2022 version of the course, so some content may not reflect the most current edition. Most of it comes from my own handwritten notes. Personally, I think the course would be more accurately titled “Foundational Mathematics” rather than “Computational Mathematics,” since it leaves out numerical methods (and probably other topics people more familiar with the field could point out). If you notice any errors, please feel free to reach out to me via Slack or email. P.S. Chapter 4 has been delayed for ages because I’ve been too lazy to redraw all the triangles by hand. "],["00-how-to-prove-it.html", "How to Prove It", " How to Prove It One of the largest stumbling block in studying mathematics is learning how to prove theorems. In this post, I would share with you 3 of the most commonly used technique with at least one step by step example. Direct proof Perhaps the most intuitive and straightforward way to write proofs. It goes by “If A, then B” or “A implies B” or mathematically A \\(\\Rightarrow\\) B. For example: The sum of two even numbers is also even. Proof: Let \\(x\\) and \\(y\\) be even numbers. Since they are even, by definition they can be rewritten as \\(2n\\) and \\(2m\\) respectively. Thus, the sum \\(x+y = 2n+2m = 2(n+m)\\), which is even number by definition. Third Binomial Formula \\[\\begin{equation} (a-b)\\cdot (a+b) = a^2-b^2 \\end{equation}\\] Proof: \\[\\begin{align} (a-b)\\cdot (a+b)&amp;= a\\cdot a+a\\cdot b-b \\cdot a-b \\cdot b\\\\ &amp;= a^2+a \\cdot b-b \\cdot a-b^2\\\\ &amp;= a^2-b^2 \\end{align}\\] Square of odd number is also odd Proof: Let \\(x\\) be odd numbers. Since it is odd, by definition it can be rewritten as \\(2n+1\\). Thus the square product \\(x^2 = (2n+1)^2 = 4n^2+4n+1 = 2(2n^2+2n)+1\\) which is an odd number by definition. Indirect proof or proof by contradiction An elegant way to write a proof that might seem counter intuitive at first. It is also known as proof by contradiction and reductio ad impossibile. It goes the following steps: Assume the proposition to be proved is false Then show that the assumption leads to mutually contradictory assertion Since the assumption that the proposition is false proved contradictory, then the proposition must be true For example: \\(\\sqrt{2}\\) is irrational Proof:Let there be \\(p\\) such that \\(p^2=2\\). If \\(p\\) is rational, we could write \\(p = \\frac{m}{n}\\) where \\(m\\) and \\(n\\) are integers that are not both even. This is then implies that \\(m^2=2n^2\\) and thus \\(m^2\\) is even. If \\(m^2\\) is even, \\(m\\) must be even too. Because \\(m\\) is even, \\(m^2\\) is divisible by 4 which in turn implies that \\(n^2\\) is even and therefore \\(n\\) is even. This contradicts with our earlier assumption that \\(m\\) and \\(n\\) are integers that are not both even and therefore, a rational \\(p\\) could not exist. There exist no integers a and b for which \\(6a + 3b = 1\\) Proof:Let us first assume that such \\(a\\) and \\(b\\) exist. Dividing by 3 gives us: \\(2a+b=\\frac{1}{3}\\) which is a contradiction since \\(2a+b\\) is an integer but \\(\\frac{1}{3}\\) is not. Therefore there exist no such integers \\(a\\) and \\(b\\) Mathematical Induction Mathematical induction is usually taught together with series and sequences. It is a powerful tool to prove series and sequences. It is split into two steps: Initial case: prove that the statement holds for 0 and or 1 Induction step: assume that if the statement holds for some arbitrary natural number \\(n\\), then prove that it also holds for \\(n+1\\) For example: [Little Gauss] (Sum of Arithmetic Sequence) \\[\\begin{equation} \\sum_{i=1}^n i= \\frac{n\\cdot(n+1)}{2} \\end{equation}\\] Proof: Initiation step for \\(n = 1\\): For the left side: \\[\\begin{equation} \\sum_{i=1}^n i= 1 \\end{equation}\\] And the right side: \\[\\begin{equation} \\frac{1\\cdot(1+1)}{2}=1 \\end{equation}\\] We obtain the same value from both sides, therefore equation holds for \\(n = 1\\). Induction step from \\(n\\) to \\(n+1\\): Assume that the statement holds for some arbitrary natural number \\(n\\), then for \\(n+1\\), For the left side: \\[\\begin{equation} \\sum_{i=1}^{n+1} i= \\frac{(n+1)\\cdot(n+2)}{2} \\end{equation}\\] And the right side: \\[\\begin{align} \\frac{n\\cdot(n+1)}{2}+(n+1) &amp;= \\frac{n\\cdot(n+1)+2\\cdot(n+1)}{2}\\\\ &amp;= \\frac{n^2+n+2n+2}{2}\\\\ &amp;= \\frac{n^2+3n+2}{2}\\\\ &amp;= \\frac{(n+1)\\cdot(n+2)}{2} \\end{align}\\] We obtain the same value from both sides, therefore equation holds for \\(n+1\\). Since both the base case and the induction step have been proved as true, by mathematical induction the statement holds for every natural number \\(n\\). More examples will be added in the future "],["01-number-bases.html", "Chapter 1 Number Bases, Conversion and Operations 1.1 Number Bases 1.2 Why different bases matter? (optional) 1.3 Number Conversion 1.4 Operations with Binary Number 1.5 Negative Numbers in Binary (optional)", " Chapter 1 Number Bases, Conversion and Operations Reading Materials: Croft, A. and R. Davidson Foundation maths. (Harlow: Pearson, 2016) 6th edition. Chapter 14 Number Bases 1.1 Number Bases Decimal System The numbers that we commonly used are based on 10. For example: \\[\\begin{equation} \\label{eq1} \\begin{split} 253 &amp; = 200 + 50 + 3 \\\\ &amp; = 2(100) + 5(10) + 3 \\\\ &amp; = 2(10^2)+ 5(10^1) + 3(10^0) \\end{split} \\end{equation}\\] Binary System A binary system uses base 2, it only consist of 2 digits, 0 and 1. Numbers in base 2 are called binary digits or simply bits. Consider the binary number \\(110101_2\\). As the base is 2, this means that power of 2 essentially replace powers of 10. Let us convert it to base 10. \\[\\begin{equation} \\label{eq2} \\begin{split} 110101_2 &amp; = 1(2^5)+1(2^4)+0(2^3)+1(2^2)+0(2^1)+1(2^0) \\\\ &amp; = 1(32)+1(16)+0(8)+1(4)+0(2)+1(1) \\\\ &amp; = 32+16+4+1 \\\\ &amp; = 53_{10} \\end{split} \\end{equation}\\] Octal System Octal numbers use 8 as a base. The eight digits used in the octal system are 0, 1, 2, 3, 4, 5, 6 and 7. Octal numbers use powers of 8, just as decimal numbers use powers of 10 and binary numbers use powers of 2. Example: \\[\\begin{equation} \\label{eq3} \\begin{split} 325_8 &amp; = 3(8^2)+2(8^1)+5(8^0) \\\\ &amp; = 3(64)+2(8)+5(1) \\\\ &amp; = 192+16+5 \\\\ &amp; = 213_{10} \\end{split} \\end{equation}\\] Hexadecimal System Hexadecimal system use 16 as a base. The digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E and F. Example: \\[\\begin{equation} \\label{eq4} \\begin{split} 93\\text{A}_{16} &amp; = 9(16^2)+3(16^1)+\\text{A}(16^0) \\\\ &amp; = 9(256)+3(16)+10(1) \\\\ &amp; = 2304+48+10 \\\\ &amp; = 2362_{10} \\end{split} \\end{equation}\\] General Formula for Numbers in Any Base A number in any base \\(b\\) can be represented using a general formula that is essentially a weighted sum of its digits, where each weight is a power of the base. For a number \\(N\\) with integer and fractional parts, expressed in base \\(b\\) as \\(d_n d_{n-1} \\dots d_1 d_0 . d_{-1} d_{-2} \\dots d_{-m}\\), the value of the number can be calculated using the following formula: \\[\\begin{equation} N = \\sum_{i=0}^{n} d_i b^i + \\sum_{j=1}^{m} d_{-j} b^{-j} \\end{equation}\\] Let’s break down this formula: \\(N\\): This is the value of the number in base 10 (decimal). \\(b\\): This is the base of the number system (e.g., 2 for binary, 8 for octal, 10 for decimal, 16 for hexadecimal). \\(d_i\\): This represents the digit at position \\(i\\) to the left of the decimal point. The positions are indexed starting from 0, so \\(d_0\\) is the digit right before the decimal point, \\(d_1\\) is the digit to its left, and so on. \\(d_{-j}\\): This represents the digit at position \\(j\\) to the right of the decimal point. The positions are indexed starting from 1, so \\(d_{-1}\\) is the first digit after the decimal point, \\(d_{-2}\\) is the second, and so on. \\(b^i\\): This is the weight for the integer part of the number. Each digit \\(d_i\\) is multiplied by the base raised to the power of its position. \\(b^{-j}\\): This is the weight for the fractional part of the number. Each digit \\(d_{-j}\\) is multiplied by the base raised to a negative power of its position. \\(\\sum_{i=0}^{n} d_i b^i\\): This is the sum of the products of each digit in the integer part and its corresponding power of the base. \\(\\sum_{j=1}^{m} d_{-j} b^{-j}\\): This is the sum of the products of each digit in the fractional part and its corresponding negative power of the base. 1.2 Why different bases matter? (optional) Not required for this course, but useful to know. At its core, the reason we use different number bases is efficiency and human readability. Computers fundamentally operate using binary (base-2) because their hardware (transistors, logic gates) can most easily represent two states: on (1) and off (0). However, writing out and interpreting long strings of 1s and 0s is extremely tedious and error-prone for humans. This is where octal (base-8) and hexadecimal (base-16) become essential. They serve as a shorthand for binary, allowing us to represent large binary numbers in a much more compact, readable, and manageable form. 1.2.1 Comparison of Typical Use Cases Number Base Typical Use Cases Key Advantage Example (Value = 255 in Decimal) Binary (Base-2) • CPU instruction sets• Memory addressing• Digital logic circuits• Boolean algebra / Bitmasking The native language of hardware. Directly represents the on/off state of electrical circuits. 11111111 Octal (Base-8) • Historical systems (e.g., PDP-8, Unix file permissions)• Occasionally in aviation (e.g., transponder codes) Provides a more compact shorthand than binary for systems where the word size is divisible by 3. 377 Hexadecimal (Base-16) • Memory addresses• Machine code / Assembly language• Representing raw data (e.g., color codes #RRGGBB, network MAC addresses)• Debugging and reverse engineering The primary shorthand for binary. One digit represents a 4-bit nibble, making it extremely compact and easy to convert to/from binary. FF In summary: Binary is for machines, decimal is for people, and hex/octal are the crucial bridges that allow developers and engineers to work with machine-level data efficiently. Hexadecimal has become the undisputed standard for this role in modern computing. 1.2.2 Why They’re Important Binary is essential because it’s the only language that computers understand. However, a single byte (8 bits) of binary data, like 01011010, can be hard for a person to read, write, and remember. That’s where octal and hexadecimal come in as shorthand notations. They group binary digits into larger chunks, making long binary strings more manageable. For example, the 8-bit binary number 11111010 is represented as 372 in octal and FA in hexadecimal. Both octal and hexadecimal are significantly shorter and less prone to human error than their binary equivalent. Hexadecimal is now the preferred standard because a single hexadecimal digit corresponds to exactly four binary digits (a nibble), which aligns perfectly with the byte (8 bits) and word (16, 32, or 64 bits) architectures common in modern computing. This makes it ideal for tasks like memory addressing, color representation in web development (e.g., #FF5733), and debugging. 1.3 Number Conversion 1.3.1 Converting from Decimal to Other Number Base The no-brainer way is to divide the number by the base, the remainder would be the last digit of the new number base. Keep dividing the quotient until it is smaller than the number base. Let us convert \\(253_{10}\\) as example. \\[\\begin{equation} \\label{eq5} \\begin{split} 2{\\overline{\\smash{\\big)}\\,253\\phantom{)}}} &amp; = 126 \\text{ with remainder }1\\\\ 2{\\overline{\\smash{\\big)}\\,126\\phantom{)}}} &amp; = 63 \\text{ with remainder }0\\\\ 2{\\overline{\\smash{\\big)}\\,63\\phantom{)}}} &amp; = 31 \\text{ with remainder }1\\\\ 2{\\overline{\\smash{\\big)}\\,31\\phantom{)}}} &amp; = 15 \\text{ with remainder }1\\\\ 2{\\overline{\\smash{\\big)}\\,15\\phantom{)}}} &amp; = 7 \\text{ with remainder }1\\\\ 2{\\overline{\\smash{\\big)}\\,7\\phantom{)}}} &amp; = 3 \\text{ with remainder }1\\\\ 2{\\overline{\\smash{\\big)}\\,3\\phantom{)}}} &amp; = 1 \\text{ with remainder }1\\\\ 2{\\overline{\\smash{\\big)}\\,1\\phantom{)}}} &amp; = 0 \\text{ with remainder }1 \\end{split} \\end{equation}\\] Thus, \\(253_{10}\\) is \\(11111101_2\\) in binary. We could do the same to other number bases. Another method is by listing the powers of the base, compare and subtract. Using the same number as example. \\(2^0 = 1\\) \\(2^1 = 2\\) \\(2^2 = 4\\) \\(2^3 = 8\\) \\(2^4 = 16\\) \\(2^5 = 32\\) \\(2^6 = 64\\) \\(2^7 = 128\\) \\(2^8 = 256\\) From here we compare the number that we are going to convert with the list: \\[\\begin{equation} \\label{eq6} \\begin{split} 253 - 1(128) &amp; = 125 \\\\ 125 - 1(64) &amp; = 61 \\\\ 61 - 1(32) &amp; = 29 \\\\ 29 - 1(16) &amp; = 13 \\\\ 13 - 1(8) &amp; = 5 \\\\ 5 - 1(4) &amp; = 1 \\\\ 1 - 0(2) &amp; = 1\\\\ 1- 1(1) &amp; = 0 \\end{split} \\end{equation}\\] Thus, \\(253_{10}\\) is \\(11111101_2\\) in binary. Like the other method, we can also do this to convert to other number bases. 1.3.2 Conversion Shortcuts with Binary Number Converting binary numbers to Octal or Hexadecimal and vice versa are very straightforward. It can be performed without converting to Decimal first. Let us use number \\(11100110_2\\) as example: \\[\\begin{equation} \\label{eq7} \\begin{split} \\underbrace{11}_\\text{3}\\underbrace{100}_\\text{4}\\underbrace{110}_\\text{6} &amp; = 346_8\\\\ \\underbrace{1110}_\\text{E}\\underbrace{0110}_\\text{6} &amp; = \\text{E}6_{16} \\end{split} \\end{equation}\\] 1.3.3 Non-integer Number Conversion Converting non-integer number might look counter-intuitive and intimidating. It is actually rather simple. Let us convert \\(17.375_{10}\\) to binary. \\[\\begin{split} 17.375 &amp; = 10 + 7 + 0.3+0.07+0.005 \\\\ &amp; = 1(10^1) + 7(10^0) + 3(10^{-1}) + 7(10^{-2})+5(10^{-3}) \\end{split}\\] Converting to binary, \\(17_{10} = 10001_2\\). But how about the decimal point? We multiply them by two until we are left with whole number \\[\\begin{equation} \\label{eq8} \\begin{split} 0.375 \\times 2 = 0.75 = 0+0.75 &amp; \\text{ we have 0 at power }-1\\\\ 0.75 \\times 2 = 1.5 = 1+0.5 &amp; \\text{ we have 1 at power }-2\\\\ 0.5 \\times 2 = 1.0 = 1 &amp; \\text{ we have 1 at power }-3 \\end{split} \\end{equation}\\] Thus, \\(17.375_{10} = 10001.011_2\\) The reverse is much simpler. \\[\\begin{equation} \\label{eq9} \\begin{split} 1101.101_2 &amp; = 1(2^3)+1(2^2)+0(2^1)+1(2^0)+1(2^{-1})+0(2^{-2})+1(2^{-3}) \\\\ &amp; = 1(8)+1(4)+0(2)+1(1)+1(0.5)+0(0.25)+1(0.125) \\\\ &amp; = 8 + 4 + 1+ 0.5+0.125 \\\\ &amp; = 13.625_{10} \\end{split} \\end{equation}\\] 1.4 Operations with Binary Number Addition Addition is rather straightforward, just like with decimal numbers. Here we use \\(11001001_2\\) and \\(11111111_2\\) as example. In decimal they are 201 and 255 respectively. \\[\\begin{equation}\\label{eq10} \\begin{array}{B3} \\overset{1}0 &amp; \\overset{1}1\\overset{1}1\\overset{1}0\\overset{1}0 &amp; \\overset{1}1\\overset{1}0\\overset{1}01 \\\\ {} + 0 &amp; 1111 &amp; 1111\\\\ \\hline 1 &amp; 1100 &amp; 1000\\\\ \\end{array} \\end{equation}\\] \\[\\begin{equation} \\label{eq11} \\underbrace{11001001}_\\text{201}+\\underbrace{11111111}_\\text{255} = \\underbrace{1 1100 1000}_\\text{456} \\end{equation}\\] Subtraction Likewise for subtraction, between \\(111 0011_2\\) and \\(101 0010_2\\) \\[\\begin{equation}\\label{eq12} \\begin{array}{B3} 1 1 1 &amp; 0 0 11\\\\ {} - 101 &amp; 0010\\\\ \\hline 010 &amp; 0001 \\\\ \\end{array} \\end{equation}\\] \\[\\begin{equation} \\label{eq13} \\underbrace{1110011}_\\text{115}-\\underbrace{1010010}_\\text{82} = \\underbrace{100001}_\\text{33} \\end{equation}\\] Multiplication Multiplication is essentially addition done multiple times. Let us have multiplication of \\(1100_2\\) and \\(1111_2\\). I would skip the carry so it wouldn’t look too cramped. \\[\\begin{equation}\\label{eq14} \\begin{array}{c} \\phantom{\\times9999}1100\\\\ \\underline{\\times\\phantom{9999}1111}\\\\ \\phantom{\\times9999}1100\\\\ \\phantom{\\times999}1100\\phantom9\\\\ \\phantom{\\times99}1100\\phantom{99}\\\\ \\underline{\\phantom{\\times9}1100\\phantom{999}}\\\\ \\phantom\\times10110100 \\end{array} \\end{equation}\\] \\[\\begin{equation} \\label{eq15} \\underbrace{1100}_\\text{12}\\times\\underbrace{1111}_\\text{15} = \\underbrace{10110100}_\\text{180} \\end{equation}\\] Division Division is perhaps the one that feels the most unnatural and most likely to cause mistakes. Let us do this with \\(11100110_2\\) divided with \\(110_2\\) as example. \\[\\begin{equation}\\label{eq16} \\begin{array}{r} 100110\\phantom{)} \\\\ 110{\\overline{\\smash{\\big)}\\,11100110\\phantom{)}}}\\\\ \\underline{-~\\phantom{(}110\\phantom{99999)}}\\\\ \\phantom{\\times{99}}10\\phantom{9999)}\\\\ \\underline{-~\\phantom{()}0\\phantom{9999)}}\\\\ \\phantom{\\times{99}}100\\phantom{999)}\\\\ \\underline{-~\\phantom{()}0\\phantom{999)}}\\\\ \\phantom{\\times{99}}1001\\phantom{99)}\\\\ \\underline{-~\\phantom{()}110\\phantom{99)}}\\\\ \\phantom{\\times{999}}111\\phantom{9)}\\\\ \\underline{-~\\phantom{()}110\\phantom{9)}}\\\\ \\phantom{\\times{9999}}10\\phantom{)}\\\\ \\underline{-~\\phantom{()}0\\phantom{)}}\\\\ 10\\phantom{)} \\end{array} \\end{equation}\\] \\[\\begin{equation} \\label{eq17} \\underbrace{11100110}_\\text{230}\\div\\underbrace{110}_\\text{12} = \\underbrace{100110}_\\text{38} \\text{ with remainder }\\underbrace{10}_\\text{2} \\end{equation}\\] 1.5 Negative Numbers in Binary (optional) Not required for this course, but useful to know. So far, we have only worked with unsigned binary numbers, which can represent non-negative integers. To handle negative values, computers use special representations. The three most common are: Sign-and-Magnitude The most significant bit (MSB) is the sign bit: 0 for positive, 1 for negative. Example (with 4 bits): 0101₂ = +5 1101₂ = -5 Drawback: arithmetic becomes complicated (two versions of zero). One’s Complement Negative numbers are formed by inverting all bits of the positive number. Example (4 bits): 0101₂ = +5 1010₂ = -5 (one’s complement of 0101) Still has two versions of zero: 0000 and 1111. Two’s Complement Negative numbers are formed by inverting all bits and adding 1. Example (4 bits): 0101₂ = +5 Invert → 1010₂ Add 1 → 1011₂ = -5 Only one zero, and arithmetic works cleanly with addition/subtraction. Two’s complement is the most widely used method for representing negative numbers in computer systems. It overcomes the limitations of the previous two methods by providing a single representation for zero and simplifying arithmetic operations, allowing subtraction to be performed as addition. "],["02-series-and-sequence.html", "Chapter 2 Series and Sequence 2.1 Little Gauss (optional) 2.2 Sequence 2.3 Series 2.4 Recursive Sequences", " Chapter 2 Series and Sequence Reading Materials: Croft, A. and R. Davidson Foundation maths. (Harlow: Pearson, 2016) 6th edition. Chapter 12 Sequences and series. 2.1 Little Gauss (optional) Not required for this course, but a well known story. There is this story that is often told in mathematics classes. While the story itself is likely apocryphal, it likely have some pedagogical value. The story goes this way: There was once a German school where a boy Carl Friedrich made mischief during mathematics lesson. Instead of corporal punishment that was common in that time, the teacher instead decided to give him mathematics assignment to keep him busy. He was asked to add up the numbers from one to a hundred. Most students would diligently start adding and be busy for a while. The young Carl Friedrich, on the other hand, answered after a few minutes. The teacher was surprised at the request to speak, since he had just kept the boy busy. He was all the more astonished when Carl Friedrich said that he had finished the task and was even able to say the correct result (5050). How had he solved it? How he did it so fast? Carl Friedrich discovered discovered the following - unfortunately I do not know what coincidence was behind it. He wrote the numbers down like this: 1 2 3 \\(\\dots\\) 99 100 100 99 98 \\(\\dots\\) 2 1 This still doesn’t look interesting yet. He would then add up the numbers. 1 2 3 \\(\\dots\\) 99 100 100 99 98 \\(\\dots\\) 2 1 101 101 101 \\(\\dots\\) 101 101 Each of them have the sum 101. This looks rather promising. To sum it up, we write down the numbers from one to one hundred twice, once in increasing order and once in decreasing order, we would then sum them up and we can clearly see that we obtain the sum of \\(100 \\cdot 101\\). But we are not finished yet because we counted each numbers twice so we still have to divide the results by two. Then, we would have the sum of numbers from one to a hundred. And that’s exactly how Carl Friedrich proceeded. Do we know Carl Friedrich? Hopefully that’s the case, because Carl Friedrich was none other than Carl Friedrich Gauss. One of the most important German mathematicians (if not the most important German mathematician). Let us talk about the formula Mathematicians love formulas or should I say the general solution of a problem. The sum of the first \\(n\\) of natural numbers follows the formula: \\[\\begin{equation} \\Sigma = \\frac{n\\cdot(n+1)}{2} \\end{equation}\\] This is not as complicated as it looks. We could for example count the sum of 1 to 150, then we set \\(n\\) equals to 150. \\[\\begin{equation} \\Sigma = \\frac{150\\cdot(150+1)}{2}= \\frac{150\\cdot(151)}{2}= \\frac{22650}{2}=11325 \\end{equation}\\] This formula is today is still affectionately referred as “Der Kleine Gauss”, German for “Little Gauss”. Anyone studying higher mathematics would have to prove the validity of the formula. The formula itself is an arithmetic series. We would learn more about it later. 2.2 Sequence A sequence is a set of numbers written down in a specific order. For example, 1,3,4,7,9. There need not be an obvious rule relating to the numbers in the sequence. For example, 9, -11, \\(\\frac{1}{2}\\), 32.5 is a sequence. A simple way of forming a sequence is to calculate each new term by adding a fixed amount to the previous term. For example, \\(1,7,13,19, \\dots\\). Such sequence is called arithmetic progression or arithmetic sequence. Geometric progression is a sequence formed by multiplying the previous term by fixed amount. For example, \\(2,10,50, 250,\\dots\\). Some sequences continue indefinitely, these are called infinite sequences. It can happen that as we move along the sequence, the term get closer and closer to a fixed value. For example, \\(1,\\frac{1}{2},\\frac{1}{3},\\frac{1}{4},\\frac{1}{5}, \\dots\\). This sequence can be rewritten in the form of: \\[\\begin{equation}\\label{eq3} x_k = \\frac{1}{k} \\text{ , for } k = 1, 2,3,4,5,\\dots \\end{equation}\\] As \\(k\\) get larger and larger, and approaches infinity, \\(x_k\\) get closer and closer to zero. We say that \\(\\frac{1}{k}\\) tends to zero as \\(k\\) tends to infinity or alternatively, as k tends to infinity, the limit of the sequence is zero. We write this down as: \\[\\begin{equation}\\label{eq4} \\lim_{k \\to \\infty} \\frac{1}{k} = 0 \\end{equation}\\] When a sequence possess a limit, it is said to converge, when not, it is said to diverge. 2.3 Series If the terms of a sequence are added the result is known as series. A series is a sum. If the series contains a finite number of terms, we are able to add them all up and obtain the sum. A series is said to converge if it has finite sum. The sum of first \\(n\\) terms of an arithmetic series with first term \\(a\\) and common difference \\(d\\) is denoted by \\(S_n\\) and given by \\[\\begin{equation}\\label{eq5} S_n = \\frac{n}{2}(2a+(n-1)d) \\end{equation}\\] The sum of first \\(n\\) terms of an geometric series with first term \\(a\\) and common ratio \\(r\\) is denoted by \\(S-n\\) and given by \\[\\begin{equation}\\label{eq6} S_n = \\frac{a(1-r^n)}{1-r} \\text{ , for } r \\neq 1 \\end{equation}\\] for \\(n \\to \\infty\\) and \\(-1&lt;r&lt;1\\), \\[\\begin{equation}\\label{eq7} S_n = \\frac{a}{1-r} \\end{equation}\\] Beware that a converging sequence does not mean it’s sum (series) converges. \\[\\begin{equation} \\lim_{k \\to \\infty} x_k = 0 \\nRightarrow \\sum_{k=1}^\\infty x_k \\text{ converges.} \\end{equation}\\] In our example of \\(x_k = \\frac{1}{k}\\), \\(x\\) converges to zero as \\(k\\) approaches infinity however, the sum of \\(x\\) does not. This is known as Harmonic series. I’m not going to prove it here. You can check yourself here. 2.4 Recursive Sequences Not all sequences are given by a simple formula. Some are defined by recurrence relations, where each term is expressed in terms of previous terms. This is called a recursive sequence. Example 1: Arithmetic progression (recursive form). The sequence \\(1, 4, 7, 10, \\dots\\) can be defined recursively as: \\[ u_1 = 1, \\quad u_{n+1} = u_n + 3 \\] Example 2: Fibonacci sequence. The famous Fibonacci sequence is defined by: \\[ F_1 = 1, \\; F_2 = 1, \\quad F_{n+2} = F_{n+1} + F_n \\] giving \\(1, 1, 2, 3, 5, 8, \\dots\\) Recursive definitions are powerful, but sometimes it is useful to find an explicit formula for the \\(n\\)-th term instead of calculating step by step. "],["03-modular-arithmetic.html", "Chapter 3 Modular Arithmetic 3.1 Congruence 3.2 Operations in Modular Arithmetics 3.3 Fermat’s Little Theorem (optional)", " Chapter 3 Modular Arithmetic Reading Materials: Yan, S.Y. Number theory for computing. (Berlin: Springer-Verlag, 2002) 2nd edition. Section 1.2 Theory of divisibility pp.21-pp.24 , Section 1.6 Theory of congruences pp.111-119 3.1 Congruence Modular arithmetic is a system of arithmetic for integers where the number “wraps around” after reaching a certain value we call modulus Modular arithmetic is commonly used in number theory, algebra (group theory, ring theory, etc) and also in cryptography. An example in daily life is the clock. The numbers go from 1 to 12, but when you get to “13 o’clock”, it actually becomes 1 o’clock again (think of how the 24 hour clock numbering works). So 13 becomes 1, 14 becomes 2, and so on. This can keep going, so when you get to “25 o’clock’’, you are actually back round to where 1 o’clock is on the clock face (and also where 13 o’clock was too), this is arithmetic modulo 12. In our clock example, the number go from 1 to 12. In formal mathematics, we usually start from 0. In this case our clock would have 12 replaced with zero. Thus, \\[\\begin{equation} 24\\equiv 0 \\mod{12} \\end{equation}\\] Two integers \\(a\\) and \\(b\\) are said to be congruent modulus \\(k\\) if when they are divided by \\(k\\), they have the same remainder. More examples: \\[\\begin{equation} \\begin{split} 3 &amp;\\equiv 5 \\mod{2} \\end{split} \\end{equation}\\] 3 divided by 2 gives 1 with remainder 1, 5 divided by 2 gives 2 with remainder 1. \\[\\begin{equation} \\begin{split} 14 &amp;\\equiv 2 \\mod{12} \\end{split} \\end{equation}\\] 14 divided by 12 gives 1 with remainder 2, 2 divided by 12 gives 0 with remainder 2. How about negative numbers? \\(-17 \\mod{12}\\) for example: \\[\\begin{equation} \\begin{split} -17 \\mod{12} &amp; \\equiv -5\\mod{12}\\\\ &amp; \\equiv 7 \\mod{12} \\end{split} \\end{equation}\\] 3.2 Operations in Modular Arithmetics Examples in modulus 12: \\[\\begin{equation} \\begin{split} 14+28\\equiv 2+4 \\equiv 6 &amp; \\rightarrow 14+28 \\equiv 6\\mod{12}\\\\ 28-14\\equiv 4-2 \\equiv 2 &amp; \\rightarrow 28-14 \\equiv 2\\mod{12}\\\\ 11+28\\equiv 11+4 \\equiv 15 \\equiv 3 &amp; \\rightarrow 11+28 \\equiv 3\\mod{12}\\\\ 14\\times28\\equiv 2\\times4 \\equiv 8 &amp; \\rightarrow 14\\times28 \\equiv 8\\mod{12}\\\\ \\end{split} \\end{equation}\\] Division can not be straightforwardly extended. For example, \\(4\\div 12\\) is not defined since \\(12\\equiv 0 \\mod 12\\). We should first define multiplicative inverse of \\(\\mod k\\). Multiplicative inverse \\(m^{-1}\\) of integer \\(m\\) is defined as: \\[\\begin{equation} m\\times m^{-1} = 1 \\mod k \\end{equation}\\] Then we define \\(a\\div b\\) in \\(\\mod k\\) as multiplication of \\(a\\times b^{-1}\\). For example: \\[\\begin{equation} \\begin{split} 2^{-1} \\mod 7 &amp; \\\\ 2 \\times 4 \\equiv 1 \\mod 7 &amp; \\rightarrow 2^{-1} \\mod 7 = 4 \\mod 7 \\end{split} \\end{equation}\\] Division example: \\[\\begin{equation} 6 \\div 2 \\mod 7 \\equiv 6 \\times 2^{-1} \\equiv 6\\times 4 \\equiv 24 \\equiv 3 \\mod 7 \\end{equation}\\] Inverse don’t always exist, for example, the inverse of \\(2 \\mod 4\\). 3.3 Fermat’s Little Theorem (optional) Not required for this course, but useful to know. Fermat’s Little Theorem is one of the most important results in modular arithmetic, especially in cryptography. If \\(p\\) is a prime number and \\(a\\) is an integer not divisible by \\(p\\), then \\[\\begin{equation} a^{p-1} \\equiv 1 \\pmod{p}. \\end{equation}\\] Equivalently, \\[\\begin{equation} a^p \\equiv a \\pmod{p}, \\quad \\text{for all integers } a. \\end{equation}\\] Applications Quick Computation of Inverses: If \\(\\gcd(a,p)=1\\), then \\[ a^{p-2} \\equiv a^{-1} \\pmod{p}. \\] For example, the inverse of \\(3 \\pmod{7}\\): \\[ 3^{7-2} = 3^5 = 243 \\equiv 5 \\pmod{7}. \\] Simplifying Exponentiation: Fermat’s theorem reduces large exponents modulo \\(p\\). Example: Compute \\(7^{222} \\pmod{13}\\). Since \\(13\\) is prime, \\[ 7^{12} \\equiv 1 \\pmod{13}. \\] Then, \\[ 222 \\equiv 6 \\pmod{12}, \\quad \\Rightarrow \\quad 7^{222} \\equiv 7^6 \\pmod{13}. \\] Calculating, \\[ 7^2 = 49 \\equiv 10, \\quad 7^4 \\equiv 10^2 = 100 \\equiv 9, \\quad 7^6 \\equiv 9 \\times 10 = 90 \\equiv 12 \\pmod{13}. \\] "],["04-trigonometry.html", "Chapter 4 Introduction to Trigonometry 4.1 Angles 4.2 Triangles 4.3 Trigonometric Relations", " Chapter 4 Introduction to Trigonometry Reading Materials: Croft, A. and R. Davidson Foundation maths. (Harlow: Pearson, 2016) 6th edition. Chapter 22 Introduction to trigonometry. 4.1 Angles An angle is the measure of separation between two rays that share a common starting point (vertex). 4.1.1 Units of Measurement Degrees (°): 1 flat angle = 180° 1 complete angle = 360° 1° = 60 minutes (′) 1′ = 60 seconds (″) Radians: Defined using the arc of a circle: \\[\\begin{equation} 1 \\text{ radian} = \\frac{\\text{arc length}}{\\text{radius}} \\end{equation}\\] A complete circle = \\(2\\pi\\) radians = 360° Conversion formulas: \\[\\begin{equation} \\text{radians} = \\text{degrees} \\times \\frac{\\pi}{180}, \\quad \\text{degrees} = \\text{radians} \\times \\frac{180}{\\pi} \\end{equation}\\] 4.1.2 Type of Angles Type of Angle Measure (Degrees) Measure (Radians) Notes Acute angle \\(0^\\circ &lt; \\theta &lt; 90^\\circ\\) \\(0 &lt; \\theta &lt; \\tfrac{\\pi}{2}\\) Smaller than a right angle Right angle \\(\\theta = 90^\\circ\\) \\(\\theta = \\tfrac{\\pi}{2}\\) Quarter turn Obtuse angle \\(90^\\circ &lt; \\theta &lt; 180^\\circ\\) \\(\\tfrac{\\pi}{2} &lt; \\theta &lt; \\pi\\) Between right and flat Flat angle \\(\\theta = 180^\\circ\\) \\(\\theta = \\pi\\) Straight line Reflex angle \\(180^\\circ &lt; \\theta &lt; 360^\\circ\\) \\(\\pi &lt; \\theta &lt; 2\\pi\\) More than flat, less than full turn Complete angle \\(\\theta = 360^\\circ\\) \\(\\theta = 2\\pi\\) Same as \\(0^\\circ\\) due to periodicity 4.2 Triangles Definition A triangle is a polygon with three sides and three angles. The sum of the interior angles of a triangle is always: \\[\\begin{equation} 180^\\circ \\; \\; \\text{(or } \\pi \\text{ radians)} \\end{equation}\\] Classification by Sides Equilateral: 3 equal sides, 3 equal angles (each 60°). Isosceles: 2 equal sides, 2 equal angles. Scalene: no equal sides, no equal angles. Classification by Angles Acute triangle: all angles &lt; 90°. Right triangle: one angle = 90°. Obtuse triangle: one angle &gt; 90°. Exterior Angle Theorem An exterior angle of a triangle equals the sum of the two opposite interior angles: \\[\\begin{equation} \\text{Exterior angle} = \\text{Angle}_1 + \\text{Angle}_2 \\end{equation}\\] Triangle Inequality For any triangle with sides \\(a, b, c\\): \\[\\begin{equation} a + b &gt; c, \\quad b + c &gt; a, \\quad c + a &gt; b \\end{equation}\\] The sum of the lengths of any two sides must be greater than the third side. This condition ensures the three sides can actually form a triangle. Special case: If \\(a + b = c\\), the points are collinear (they lie on a straight line), so no triangle is formed. 4.2.1 Special Triangles 1. Equilateral Triangle All sides are equal: \\(a = b = c\\) All angles are equal: \\(60^\\circ\\) each Height formula: \\[\\begin{equation} h = \\frac{\\sqrt{3}}{2}a \\end{equation}\\] Area: \\[\\begin{equation} A = \\frac{\\sqrt{3}}{4}a^2 \\end{equation}\\] 2. Isosceles Triangle Two equal sides: \\(a = b \\neq c\\) Two equal base angles. If base = \\(c\\), height from apex bisects base: \\[\\begin{equation} h = \\sqrt{a^2 - \\left(\\frac{c}{2}\\right)^2} \\end{equation}\\] 3. Right Triangle One angle = \\(90^\\circ\\). Sides: Hypotenuse = longest side (opposite right angle). Legs = other two sides. Area: \\[\\begin{equation} A = \\frac{1}{2} \\times \\text{(base)} \\times \\text{(height)} \\end{equation}\\] Foundation for Pythagoras’ Theorem (next section). 4.2.2 Similar Triangles Definition Two triangles are similar if they have the same shape but not necessarily the same size. Corresponding angles are equal. Corresponding sides are proportional. Notation \\[\\begin{equation} \\triangle ABC \\sim \\triangle DEF \\end{equation}\\] means \\(\\angle A = \\angle D, \\; \\angle B = \\angle E, \\; \\angle C = \\angle F\\) and \\[\\begin{equation} \\frac{AB}{DE} = \\frac{BC}{EF} = \\frac{CA}{FD} \\end{equation}\\] Conditions for Similarity Two triangles are similar if: AA (Angle-Angle): Two pairs of angles are equal. SSS (Side-Side-Side): Ratios of all three pairs of sides are equal. SAS (Side-Angle-Side): Ratios of two sides are equal and the included angle is equal. Property Ratio of areas of two similar triangles equals the square of the ratio of corresponding sides: \\[\\begin{equation} \\frac{\\text{Area}_1}{\\text{Area}_2} = \\left(\\frac{\\text{Side}_1}{\\text{Side}_2}\\right)^2 \\end{equation}\\] 4.2.3 Pythagoras’ Theorem Statement In a right-angled triangle: \\[\\begin{equation} a^2 + b^2 = c^2 \\end{equation}\\] \\(a, b\\) = legs (sides adjacent to right angle) \\(c\\) = hypotenuse (side opposite the right angle, longest side) Pythagorean Triples Integer solutions to \\(a^2 + b^2 = c^2\\). Common examples: (3, 4, 5) (5, 12, 13) (8, 15, 17) Multiples also work (e.g., 6, 8, 10). 4.3 Trigonometric Relations 4.3.1 Basic Ratios (Right Triangles) For a right triangle with: Angle \\(\\theta\\) Opposite side = \\(O\\) Adjacent side = \\(A\\) Hypotenuse = \\(H\\) \\[\\begin{equation} \\sin \\theta = \\frac{O}{H}, \\quad \\cos \\theta = \\frac{A}{H}, \\quad \\tan \\theta = \\frac{O}{A} \\end{equation}\\] Mnemonic: SOH-CAH-TOA Sine = Opposite / Hypotenuse Cosine = Adjacent / Hypotenuse Tangent = Opposite / Adjacent 4.3.2 Law of Sines \\[\\begin{equation} \\frac{a}{\\sin A} = \\frac{b}{\\sin B} = \\frac{c}{\\sin C} \\end{equation}\\] Proof: Construct the altitude from \\(B\\). From the definition of sine: \\[\\begin{equation} \\sin A = \\frac{h}{c}, \\quad \\sin C = \\frac{h}{a} \\end{equation}\\] Thus: \\[\\begin{equation} h = c \\sin A, \\quad h = a \\sin C \\end{equation}\\] This gives: \\[\\begin{equation} c \\sin A = a \\sin C \\end{equation}\\] So: \\[\\begin{equation} \\frac{a}{\\sin A} = \\frac{c}{\\sin C} \\end{equation}\\] Similarly, constructing the altitude from \\(A\\) gives: \\[\\begin{equation} \\frac{b}{\\sin B} = \\frac{c}{\\sin C} \\end{equation}\\] 4.3.3 Law of Cosines \\[\\begin{equation} c^2 = a^2 + b^2 - 2ab\\cos C \\end{equation}\\] Proof: Using the same triangle from previous proof, let: \\[\\begin{equation} e = \\text{CD} \\end{equation}\\] \\[\\begin{equation} f = \\text{AD} \\end{equation}\\] We have that △CDB and △ADB are right triangles. Hence: \\[\\begin{align} c^2 &amp;= h^2+f^2\\\\ a^2 &amp;= h^2+e^2\\\\ b^2 &amp;= (e+f)^2\\\\ &amp;= e^2+f^2+2ef\\\\ e &amp;= A \\cos C \\end{align}\\] Then: \\[\\begin{align} c^2 &amp;= h^2+f^2\\\\ &amp;= a^2-e^2+f^2\\\\ &amp;= a^2-e^2+f^2+2e^2-2e^2+2ef-2ef\\\\ &amp;= a^2+\\underbrace{(e^2+f^2+2ef)}_{b^2}-2e\\underbrace{(e+f)}_b\\\\ &amp;= a^2 + b^2 - 2ab\\cos C \\end{align}\\] 4.3.4 Special Angles (Summary Table) Angle \\(\\sin \\theta\\) \\(\\cos \\theta\\) \\(\\tan \\theta\\) \\(0^\\circ\\) 0 1 0 \\(30^\\circ\\) \\(\\tfrac{1}{2}\\) \\(\\tfrac{\\sqrt{3}}{2}\\) \\(\\tfrac{1}{\\sqrt{3}}\\) \\(45^\\circ\\) \\(\\tfrac{1}{\\sqrt{2}}\\) \\(\\tfrac{1}{\\sqrt{2}}\\) 1 \\(60^\\circ\\) \\(\\tfrac{\\sqrt{3}}{2}\\) \\(\\tfrac{1}{2}\\) \\(\\sqrt{3}\\) \\(90^\\circ\\) 1 0 undefined (\\(\\infty\\)) "],["05-functions.html", "Chapter 5 Functions and Kinematics 5.1 Functions and Graphs 5.2 Kinematics", " Chapter 5 Functions and Kinematics Reading Materials: Croft, A. and R. Davidson Foundation maths. (Harlow: Pearson, 2016) 6th edition. Chapter 17 Graphs of Functions. Bone, G., G. Chadha and N. Saunders A Level Physics A for OCR Year 1 and AS student book. Chapter 3 Motion (sections 3.1–3.7). Larson, R. Precalc with limits. (Boston, MA: Cengage, 2017) 4th edition. Chapter 1 Functions and their graphs (sections 1.1–1.8). 5.1 Functions and Graphs 5.1.1 Introduction to Functions 5.1.2 Type of Functions 5.1.3 Properties of Function 5.1.4 Graph Sketching 5.1.5 Application of Functions 5.2 Kinematics 5.2.1 Introduction to Kinematics 5.2.2 Motion as a Function 5.2.3 Graphical Interpretation 5.2.4 Worked Examples "],["06-trigo-functions.html", "Chapter 6 Trigonometric Functions", " Chapter 6 Trigonometric Functions Reading Materials: "],["07-exponentials.html", "Chapter 7 Exponential and Logarithmic Functions", " Chapter 7 Exponential and Logarithmic Functions Reading Materials: "],["08-diff.html", "Chapter 8 Limit and Differentiation", " Chapter 8 Limit and Differentiation Reading Materials: "],["09-linear-algebra.html", "Chapter 9 Linear Algebra, Vector and Matrices", " Chapter 9 Linear Algebra, Vector and Matrices Reading Materials: "],["10-combinatorics.html", "Chapter 10 Combinatorics and Probability", " Chapter 10 Combinatorics and Probability Reading Materials: "]]
